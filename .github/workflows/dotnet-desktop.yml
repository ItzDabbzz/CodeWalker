on: push

permissions:
  contents: write

jobs:
  build_and_release:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1.0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      # 1. Restore with runtime
      - name: Restore packages for win-x64
        run: dotnet restore CodeWalker.sln --runtime win-x64

      # 2. Build with matching RuntimeIdentifier
      - name: Build Release
        shell: cmd
        run: msbuild CodeWalker.sln /p:Configuration=Release /p:RuntimeIdentifier=win-x64 /m

      # 3. Collect outputs + Notice.txt
      - name: Collect artifacts
        shell: bash
        run: |
          mkdir -p artifacts
          # Copy binaries/configs
          find . -path '*/bin/Release/net48/*' \
            -type f \( -iname '*.exe' -o -iname '*.dll' -o -iname '*.config' \) \
            -exec cp {} artifacts/ \;
          # Copy Notice.txt
          cp Notice.txt artifacts/
          # Create & copy icons folder
          mkdir -p artifacts/icons
          cp -r icons/* artifacts/icons/
          # Create & copy Shaders folder
          mkdir -p artifacts/Shaders
          cp -r Shaders/* artifacts/Shaders/

      # 4. Strip PDBs
      - name: Remove PDB files
        shell: bash
        run: rm -f artifacts/*.pdb

      # 5. Zip
      - name: Archive artifacts
        shell: pwsh
        run: Compress-Archive -Path artifacts\* -DestinationPath release.zip

      # 6. Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: CodeWalker-${{ github.ref_name }}.zip
          asset_content_type: application/zip
